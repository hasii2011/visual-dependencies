
from os import environ as osEnvironment

from pathlib import Path
from typing import cast

from unittest import TestSuite
from unittest import main as unitTestMain

from codeallybasic.UnitTestBase import UnitTestBase

from visualdependencies.Preferences import Preferences
from visualdependencies.futures.ConfigurationLocator import XDG_CONFIG_HOME_ENV_VAR


# import the class you want to test here
# from org.pyut.template import template


class TestPreferences(UnitTestBase):
    """
    Auto generated by the one and only:
        Gato Malo - Humberto A. Sanchez II
        Generated:  01 January 2024
    """

    clsPreferences: Preferences = cast(Preferences, None)

    @classmethod
    def setUpClass(cls):
        super().setUpClass()
        """
        Create a fake location since we know that the configuration
        locator favors using the XDG environment variable
        """
        fakeXDGPATH: Path = Path('/tmp/fakeXDG/.config')

        osEnvironment[XDG_CONFIG_HOME_ENV_VAR] = fakeXDGPATH.as_posix()

        cls.clsPreferences = Preferences()

    @classmethod
    def tearDownClass(cls):
        """
        Hook method for deconstructing the class fixture after running all tests in the class.
        """
        preferenceFile: Path = cls.clsPreferences._preferencesFileName
        preferenceFile.unlink(missing_ok=True)

    def setUp(self):
        super().setUp()

    def tearDown(self):
        super().tearDown()

    def testInitialCreation(self):
        pass

    def testName2(self):
        """Another test"""
        pass


def suite() -> TestSuite:
    import unittest

    testSuite: TestSuite = TestSuite()

    testSuite.addTest(unittest.defaultTestLoader.loadTestsFromTestCase(testCaseClass=TestPreferences))

    return testSuite


if __name__ == '__main__':
    unitTestMain()
